# Generated by Django 3.2.4 on 2023-08-03 15:17

from django.db import migrations, models
import django.db.models.deletion
import utility.django


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0003_alter_ghased_phone_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('code', models.CharField(max_length=256, verbose_name='کد OTP')),
                ('is_valid', models.BooleanField(db_index=True, default=True, verbose_name='معتبر است')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='ghased',
            name='phone_number',
            field=models.CharField(max_length=32, unique=True, validators=[utility.django.GhasedakMobileNumberValidator()], verbose_name='شماره همراه'),
        ),
        migrations.CreateModel(
            name='RegisterOTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True, validators=[utility.django.GhasedakMobileNumberValidator()], verbose_name='شماره همراه')),
                ('otp', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='register_otp', to='accounts.otp', verbose_name='کد احراز')),
            ],
        ),
        migrations.AddConstraint(
            model_name='registerotp',
            constraint=models.CheckConstraint(check=models.Q(models.Q(models.Q(('email__isnull', False), models.Q(('email', ''), _negated=True)), models.Q(('phone_number__isnull', False), models.Q(('phone_number', ''), _negated=True)), _connector='OR')), name='email_and_phone_number_not_both_null'),
        ),
    ]
